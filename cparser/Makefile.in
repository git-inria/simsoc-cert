# SimSoC-Cert, a Coq library on processor architectures for embedded systems.
# See the COPYRIGHTS and LICENSE files.
PWD=$(shell pwd)

include $(COMPCERT)/Makefile.config
DIRS=lib common $(ARCH)/$(VARIANT) $(ARCH) backend cfrontend driver

INCLUDES=$(patsubst %,-I $(COMPCERT)/%, $(DIRS))

COQC=coqc $(INCLUDES)
COQDEP=coqdep $(INCLUDES)
COQDOC=coqdoc
COQEXEC=coqtop $(INCLUDES) -I $(PWD) -batch -load-vernac-source

OCAMLBUILD=ocamlbuild
OCB_OPTIONS=\
  -j 2 \
  -no-hygiene \
  -no-links \
  -I $(COMPCERT) \
  -I extraction $(INCLUDES)

#all: extract_compcert nc
all: nc

####

#extract_compcert: compcert-1.8.tgz
#	tar xzvf $< 
compil: Csyntax_print.v
	$(COQC) Csyntax_print.v

extraction:
	rm -f extraction/*.ml extraction/*.mli
	$(COQEXEC) extraction/extraction.v
	cd extraction && ./fixextract

test: test.ml
	$(OCAMLBUILD) $(OCB_OPTIONS) test.byte

nc: export_c_ast.ml
	ocamlbuild -I $(COMPCERT)/cparser export_c_ast.native

#output_value: ../sh4/c_code.c export_c_ast.native
#	cat ../sh4/c_code.c | ./export_c_ast.native > c_code.dat

####

clean:
	ocamlbuild -clean

#clean_compcert:
#	rm -rf compcert-1.8

#clean_dat:
#	rm c_code.dat

nobackup:
	rm -f *.bak *~ *.dup
