SimSoC-Cert, a toolkit for generating certified processor simulators
--------------------------------------------------------------------


PREREQUISITES:

* The CompCert compiler, version 1.8.1.
It is available from http://compcert.inria.fr/download.html

* All the prerequisites required for CompCert, described in compcert-1.8.1/README.

* The compilation of CompCert done, inside compcert-1.8.1 :
  -  ./configure <target> 
     where target is described in compcert-1.8.1/README
  -  make proof extraction

* For ARM tests, a binary called 'arm-elf-gcc' need to be accessible from the path.
This binary can be found for example inside the SimSoC project.


INSTALLATION:

We assume that all the following operations are done at the top directory.

1- Configure the system.

             ./configure -compcert-dir <path>

   where <path> is the directory where CompCert is.
   This creates a symbolic link named 'compcert' inside the top directory.

2- Compile the pseudo-code generator.

             make

   This compiles all the Coq sources, extracts them extract/tmp, and compiles all the OCaml sources needed to obtain the generator from ARM6 and SH4.

3- Convert the PDF manual into several COQ files by using the generator.

             make arm6 sh4

   This transforms 
     arm6.pdf  into  arm6inst.v + arm6dec.v  ,
     sh4.pdf  into  sh4inst.v + sh4dec.v  .

4- Add the COQ manual to the simulator project.

             cd extract && make

   The simulator and some remaining Coq sources are extracted in extract/tmp.

5- Compile the simulator and launch the tests for ARM.

             cd test && make && ./debug

   For each test C file, we generate an OCaml file inside extract/tmp, to run as input with the simulator.
   Note that the 'make' invocation takes 10 minutes or so on a recent machine.
   ./debug runs the simulator with all the extracted test (if they are mentioned in debug.ml).

0- Clean to project.

             make clean
